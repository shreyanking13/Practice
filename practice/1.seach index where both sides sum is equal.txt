#include <bits/stdc++.h>
using namespace std;



// 0.... i.....n-1
// In a vector of size n first index is 0 and last index is n - 1.
// Check if there is an index i such that summation of all elements from index 0 to index i  is equal to 
// sumation of the rest of the elements. In other words check if there is an index i such that :   
// arr[0] + arr[1] + .... +  arr[i] =    arr[i + 1] + .... + arr[n-2] + arr[n- 1] .
// if there is no such index return -1 otherwise return index i

/* input 1
6
21 43 2 54 120
 */      
    
/* input 2
6
21 43 2 54 54  43 23  
 */     
int search( vector <int> arr , int n   ){
    // prefix_sum[i] = arr[0] + arr[1] + .... +  arr[i]
    vector <int> prefix_sum(n);
    prefix_sum[0] = arr[0];
    for (int i = 1; i < n ; ++i)
    {
        prefix_sum[i] = prefix_sum[i-1] + arr[i]; 
    }
    // suffix_sum[i] = arr[i] + .... + arr[n-2] + arr[n- 1] .
    vector <int> suffix_sum(n);
    suffix_sum[n-1] = arr[n-1];
    for (int i = n - 2; i >= 0; i--){
        suffix_sum[i] = suffix_sum[i + 1] + arr[i];
    }    

    for (int i = 0; i < n-1  ; ++i)
    {
        if (prefix_sum[i] == suffix_sum[i + 1])
        {
            return i;            
        }
    }
    return -1;

}




int main() 
{   
    int size ;
    cin >> size;
    vector <int> arr(size);
    for(int i = 0; i < size ; i++){
        cin >> arr[i] ;
    }
    int index = search( arr, size ) ;
    cout << index << endl;
   
    return 0;

}
